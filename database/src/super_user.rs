//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use crate::native_enum::SuperUserRole;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "super_user")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i32,
  pub role: SuperUserRole,
  #[sea_orm(column_type = "Text", nullable)]
  pub refresh_token: Option<String>,
  #[sea_orm(column_type = "Text")]
  pub username: String,
  #[sea_orm(column_type = "Text")]
  pub password: String,
  #[sea_orm(column_type = "Text", nullable)]
  pub avatar: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::business::Entity")]
  Business,
}

impl Related<super::business::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Business.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
